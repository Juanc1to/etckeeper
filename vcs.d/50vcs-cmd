#!/bin/sh
set -e

ORIG_USER=$USER
USER=
if [ -n "$SUDO_USER" ]; then
	USER="$SUDO_USER"
else
	# try to check tty ownership, in case user su'd to root
	TTY="$(tty 2>/dev/null || true)"
	if [ -n "$TTY" ] && [ -c "$TTY" ]; then
		USER="$(find "$TTY" -printf "%u")"
	fi
fi

if [ "$VCS" = git ] && [ -d .git ]; then
	# When not su'd to root, still set environment variables,
	# since git's own code to determine the author and committer
	# has several edge cases where it fails and would prevent the
	# commit.
	if [ -z "$USER" ]; then
		USER="$(whoami)"
	fi
	echo "Testing; \$USER: $USER"
	if [ -n "$USER" ]; then
		# Use user.name and user.email from the gitconfig belonging
		# to USER.
		USER_HOME="$(getent passwd "$USER" | cut -d: -f6)"
		if [ -n "$USER_HOME" ] && [ -e "$USER_HOME/.gitconfig" ]; then
			if [ -z "$GIT_AUTHOR_NAME" ]; then
				GIT_AUTHOR_NAME="$(git config -f "$USER_HOME/.gitconfig" user.name)" || true
				GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
				export GIT_AUTHOR_NAME GIT_COMMITTER_NAME
			fi
			if [ -z "$GIT_AUTHOR_EMAIL" ]; then
				GIT_AUTHOR_EMAIL="$(git config -f "$USER_HOME/.gitconfig" user.email)" || true
				GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"
				export GIT_AUTHOR_EMAIL GIT_COMMITTER_EMAIL
			fi
		fi
		if [ -z "$GIT_AUTHOR_NAME" ] || [ -z "$GIT_AUTHOR_EMAIL" ]; then
			if [ -n "$USER_HOME" ] && [ -e "$USER_HOME/.config/git/config" ]; then
				if [ -z "$GIT_AUTHOR_NAME" ]; then
					GIT_AUTHOR_NAME="$(git config -f "$USER_HOME/.config/git/config" user.name)" || true
					GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
					export GIT_AUTHOR_NAME GIT_COMMITTER_NAME
				fi
				if [ -z "$GIT_AUTHOR_EMAIL" ]; then
					GIT_AUTHOR_EMAIL="$(git config -f "$USER_HOME/.config/git/config" user.email)" || true
					GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"
					export GIT_AUTHOR_EMAIL GIT_COMMITTER_EMAIL
				fi
			fi
		fi

		if [ -z "$GIT_COMMITTER_EMAIL" ]; then
			GIT_COMMITTER_EMAIL="$(git config --global user.email)" || true
			export GIT_COMMITTER_EMAIL
		fi
		if [ -z "$GIT_AUTHOR_NAME" ]; then
			GIT_AUTHOR_NAME="$USER"
			export GIT_AUTHOR_NAME
		fi
		if [ -z "$GIT_AUTHOR_EMAIL" ]; then
			GIT_AUTHOR_EMAIL="$USER@$hostname"
			export GIT_AUTHOR_EMAIL
		fi
		if [ -z "$GIT_COMMITTER_EMAIL" ]; then
			GIT_COMMITTER_EMAIL=`whoami`"@$hostname"
			export GIT_COMMITTER_EMAIL
		fi
	fi
elif [ "$VCS" = hg ] && [ -d .hg ]; then
	if [ -n "$USER" ]; then
		LOGNAME="$USER"
		export LOGNAME
	fi
	if [ -z "$HGUSER" ]; then
		HGUSER="$USER@$hostname"
		export HGUSER
	fi
elif [ "$VCS" = bzr ] && [ -d .bzr ]; then
	if [ -z "$EMAIL" ] && [ -n "$USER" ]; then
		EMAIL="$USER <$USER@$hostname>"
		export EMAIL
	else
		bzr whoami >/dev/null 2>&1 || export EMAIL="$ORIG_USER <$ORIG_USER@$hostname>"
	fi
fi

# check whether we can locate the vcs binary
if [ -n "$VCS" ] && command -v "$VCS" > /dev/null; then
        # pass commands to the VCS application
        $VCS "$@"
else
	echo "error: VCS ($VCS) not set or not in PATH" >&2
	exit 1
fi
